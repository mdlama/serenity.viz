% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/module_layer_aes.R
\name{layerAesServer}
\alias{layerAesServer}
\title{Server for layer aesthetic submodule}
\usage{
layerAesServer(
  id,
  geom,
  aesthetic,
  base_layer_stages,
  inherit_aes,
  default_geom_aes,
  default_stat_aes,
  required,
  dataset,
  computed_vars,
  aesthetics,
  aesUpdateDependency = reactive({     NULL }),
  post_aesthetics_render_update
)
}
\arguments{
\item{id}{ID of layer aesthetic submodule}

\item{geom}{Geom}

\item{aesthetic}{Aesthetic}

\item{base_layer_stages}{Need base layer aesthetic mapping to use for inheritance}

\item{inherit_aes}{Reactive: Is this aesthetic inheritable?}

\item{default_geom_aes}{Default value for geom aesthetic}

\item{default_stat_aes}{Reactive value of default stat aesthetic - might be mapping!}

\item{required}{Reactive value of required status for aesthetic}

\item{dataset}{Dataset}

\item{computed_vars}{Reactive value of stat computed variables}

\item{aesthetics}{Reactive value of aesthetics (combines layer and stat aesthetics)}

\item{aesUpdateDependency}{Trigger update on layer change}

\item{post_aesthetics_render_update}{JS->R reactive to signal post-aesthetic render update (tracks state in UI)}
}
\value{
List containing layer aesthetic module state.
\describe{
  \item{stages}{List of reactive expressions of each stage's state (\code{start}, \code{after_stat}, \code{after_stage})}
  \item{code}{Reactive expression of aesthetic code (string)}
}
}
\description{
Server for layer aesthetic submodule
}
